---
- name: Install Docker dependencies
  package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_os_family == "Debian"

- name: Install Docker (Debian/Ubuntu)
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install Docker (RHEL/CentOS)
  block:
    - name: Add Docker repository (RHEL)
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/8/$basearch/stable
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
        enabled: yes

    - name: Install Docker packages (RHEL)
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
  when: ansible_os_family == "RedHat"

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Configure Docker daemon
  copy:
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        },
        "storage-driver": "overlay2",
        "exec-opts": ["native.cgroupdriver=systemd"],
        "live-restore": true
      }
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '0644'
  notify: restart docker

- name: Create Docker systemd override directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: '0755'

- name: Configure Docker systemd service
  copy:
    content: |
      [Service]
      ExecStart=
      ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
    dest: /etc/systemd/system/docker.service.d/override.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart docker

- name: Verify Docker installation
  command: docker --version
  register: docker_version
  changed_when: false

- name: Display Docker version
  debug:
    msg: "Docker version: {{ docker_version.stdout }}"
