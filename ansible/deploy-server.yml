---
# AI Box - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
# –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥–µ

- name: "AI Box - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
  hosts: aibox_servers
  become: yes
  vars_files:
    - vars/main.yml
  
  pre_tasks:
    - name: "üîç –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ"
      setup:
    
    - name: "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"
      assert:
        that:
          - ansible_facts['memtotal_mb'] >= 4096
          - ansible_facts['processor_vcpus'] >= 2
        fail_msg: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤. –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 4GB RAM –∏ 2 CPU cores"
  
  tasks:
    - name: "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
      package:
        name: "*"
        state: latest
      when: ansible_facts['os_family'] == "RedHat"
    
    - name: "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã (Ubuntu/Debian)"
      apt:
        upgrade: dist
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"
    
    - name: "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
      package:
        name:
          - curl
          - wget
          - git
          - htop
          - unzip
          - python3
          - python3-pip
        state: present
    
    - name: "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker"
      include_tasks: tasks/install-docker.yml
    
    - name: "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞"
      include_tasks: tasks/configure-firewall.yml
    
    - name: "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è AI Box"
      user:
        name: "{{ aibox_user }}"
        system: yes
        shell: /bin/bash
        home: "{{ aibox_home }}"
        create_home: yes
        groups: docker
    
    - name: "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ aibox_user }}"
        group: "{{ aibox_user }}"
        mode: '0755'
      loop:
        - "{{ aibox_home }}/app"
        - "{{ aibox_home }}/data"
        - "{{ aibox_home }}/logs"
        - "{{ aibox_home }}/config"
        - "{{ aibox_home }}/backups"
        - "{{ aibox_home }}/ssl"
    
    - name: "üì§ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"
      synchronize:
        src: "{{ playbook_dir }}/../"
        dest: "{{ aibox_home }}/app/"
        delete: yes
        rsync_opts:
          - "--exclude=.git"
          - "--exclude=__pycache__"
          - "--exclude=.pytest_cache"
          - "--exclude=node_modules"
    
    - name: "‚öôÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ aibox_user }}"
        group: "{{ aibox_user }}"
        mode: '0644'
      loop:
        - { src: "docker-compose.server.yml.j2", dest: "{{ aibox_home }}/app/docker-compose.yml" }
        - { src: "nginx.conf.j2", dest: "{{ aibox_home }}/config/nginx.conf" }
        - { src: "prometheus.yml.j2", dest: "{{ aibox_home }}/config/prometheus.yml" }
    
    - name: "üîë –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
      template:
        src: ".env.server.j2"
        dest: "{{ aibox_home }}/app/.env"
        owner: "{{ aibox_user }}"
        group: "{{ aibox_user }}"
        mode: '0600'
    
    - name: "üèóÔ∏è –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤"
      docker_image:
        name: "{{ item.name }}"
        build:
          path: "{{ aibox_home }}/app/{{ item.path }}"
          dockerfile: "{{ item.dockerfile }}"
        source: build
        force_source: yes
      loop:
        - { name: "aibox/gateway", path: ".", dockerfile: "Dockerfile.gateway" }
        - { name: "aibox/rag", path: "services/rag", dockerfile: "Dockerfile" }
        - { name: "aibox/agents", path: "services/agents", dockerfile: "Dockerfile" }
    
    - name: "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö Docker –æ–±—Ä–∞–∑–æ–≤"
      docker_image:
        name: "{{ item }}"
        source: pull
      loop:
        - "ollama/ollama:latest"
        - "postgres:15"
        - "qdrant/qdrant:latest"
        - "prom/prometheus:latest"
        - "grafana/grafana:latest"
        - "nginx:alpine"
    
    - name: "üöÄ –ó–∞–ø—É—Å–∫ AI Box"
      docker_compose:
        project_src: "{{ aibox_home }}/app"
        state: present
        pull: yes
      become_user: "{{ aibox_user }}"
    
    - name: "‚è±Ô∏è –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤"
      uri:
        url: "http://localhost:{{ gateway_port }}/health"
        method: GET
        status_code: 200
      register: health_check
      retries: 60
      delay: 10
      until: health_check.status == 200
    
    - name: "üéØ –ó–∞–≥—Ä—É–∑–∫–∞ AI –º–æ–¥–µ–ª–µ–π"
      uri:
        url: "http://localhost:{{ ollama_port }}/api/pull"
        method: POST
        body_format: json
        body:
          name: "{{ item }}"
        timeout: 600
      loop: "{{ ollama_models }}"
      ignore_errors: yes
    
    - name: "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"
      template:
        src: "aibox.service.j2"
        dest: "/etc/systemd/system/aibox.service"
        mode: '0644'
      notify: 
        - reload systemd
        - enable aibox
    
    - name: "üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"
      template:
        src: "logrotate.j2"
        dest: "/etc/logrotate.d/aibox"
        mode: '0644'
    
    - name: "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron –¥–ª—è –±—ç–∫–∞–ø–æ–≤"
      cron:
        name: "AI Box backup"
        hour: "2"
        minute: "0"
        job: "{{ aibox_home }}/app/scripts/backup.sh"
        user: "{{ aibox_user }}"
    
    - name: "‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
      uri:
        url: "http://localhost:{{ gateway_port }}/api/services/status"
        method: GET
      register: final_status
    
    - name: "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏"
      debug:
        msg:
          - "üéâ AI Box —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {{ inventory_hostname }}!"
          - "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://{{ inventory_hostname }}:{{ gateway_port }}"
          - "üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://{{ inventory_hostname }}:{{ gateway_port }}/docs"
          - "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://{{ inventory_hostname }}:{{ grafana_port }}"
          - "‚ù§Ô∏è  –ó–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã: http://{{ inventory_hostname }}:{{ gateway_port }}/health"
          - "üìÅ –õ–æ–≥–∏: {{ aibox_home }}/logs/"
          - "üíæ –î–∞–Ω–Ω—ã–µ: {{ aibox_home }}/data/"
  
  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes
    
    - name: enable aibox
      systemd:
        name: aibox
        enabled: yes
        state: started