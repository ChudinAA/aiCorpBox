#!/bin/bash
# AI Box - –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
# –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π –±—ç–∫–∞–ø –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã

set -e

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BACKUP_DIR="/opt/aibox/backups"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_NAME="aibox_backup_${TIMESTAMP}"
BACKUP_PATH="${BACKUP_DIR}/${BACKUP_NAME}"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
mkdir -p "${BACKUP_DIR}"

echo "üîÑ –ù–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ AI Box..."
echo "üìÖ –í—Ä–µ–º—è: $(date)"
echo "üìÅ –ü—É—Ç—å: ${BACKUP_PATH}"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
TEMP_DIR=$(mktemp -d)
trap "rm -rf ${TEMP_DIR}" EXIT

# 1. –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ PostgreSQL..."
if docker ps | grep -q aibox-postgres; then
    docker exec aibox-postgres pg_dump -U postgres aibox > "${TEMP_DIR}/postgres_dump.sql"
    echo "‚úÖ PostgreSQL –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ö†Ô∏è  PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é"
fi

# 2. –ë—ç–∫–∞–ø Qdrant –¥–∞–Ω–Ω—ã—Ö
echo "üîç –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ Qdrant..."
if docker ps | grep -q aibox-qdrant; then
    docker exec aibox-qdrant tar -czf /tmp/qdrant_backup.tar.gz -C /qdrant/storage .
    docker cp aibox-qdrant:/tmp/qdrant_backup.tar.gz "${TEMP_DIR}/qdrant_backup.tar.gz"
    echo "‚úÖ Qdrant –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ö†Ô∏è  Qdrant –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é"
fi

# 3. –ë—ç–∫–∞–ø Ollama –º–æ–¥–µ–ª–µ–π
echo "ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ Ollama –º–æ–¥–µ–ª–µ–π..."
if docker ps | grep -q aibox-ollama; then
    docker exec aibox-ollama tar -czf /tmp/ollama_backup.tar.gz -C /root/.ollama .
    docker cp aibox-ollama:/tmp/ollama_backup.tar.gz "${TEMP_DIR}/ollama_backup.tar.gz"
    echo "‚úÖ Ollama –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ö†Ô∏è  Ollama –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é"
fi

# 4. –ë—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
CONFIG_BACKUP="${TEMP_DIR}/config_backup"
mkdir -p "${CONFIG_BACKUP}"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ -f "config/aibox-config.yaml" ]; then
    cp config/aibox-config.yaml "${CONFIG_BACKUP}/"
fi
if [ -f "docker-compose.yml" ]; then
    cp docker-compose.yml "${CONFIG_BACKUP}/"
fi
if [ -f "docker-compose.local.yml" ]; then
    cp docker-compose.local.yml "${CONFIG_BACKUP}/"
fi
if [ -f ".env" ]; then
    cp .env "${CONFIG_BACKUP}/"
fi
if [ -d "ansible" ]; then
    cp -r ansible "${CONFIG_BACKUP}/"
fi
if [ -d "config" ]; then
    cp -r config "${CONFIG_BACKUP}/app_config"
fi

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞"

# 5. –ë—ç–∫–∞–ø –ª–æ–≥–æ–≤
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ª–æ–≥–æ–≤..."
LOGS_BACKUP="${TEMP_DIR}/logs_backup"
mkdir -p "${LOGS_BACKUP}"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
for container in aibox-gateway aibox-ollama aibox-postgres aibox-qdrant aibox-prometheus aibox-grafana; do
    if docker ps -a --format "table {{.Names}}" | grep -q "$container"; then
        docker logs "$container" > "${LOGS_BACKUP}/${container}.log" 2>&1 || true
    fi
done

echo "‚úÖ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"

# 6. –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –±—ç–∫–∞–ø–∞
echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö..."
cat > "${TEMP_DIR}/backup_info.txt" << EOF
AI Box Backup Information
========================
Timestamp: $(date)
Backup Name: ${BACKUP_NAME}
Created by: $(whoami)
Host: $(hostname)

Services Status:
$(docker ps --format "table {{.Names}}\t{{.Status}}" | grep aibox || echo "No AI Box containers running")

System Info:
OS: $(lsb_release -d -s 2>/dev/null || uname -s)
Kernel: $(uname -r)
Memory: $(free -h | grep Mem: | awk '{print $2}')
Disk Space: $(df -h / | tail -1 | awk '{print $4}' 2>/dev/null || echo "Unknown")

Backup Contents:
- PostgreSQL database dump
- Qdrant vector database
- Ollama models and data
- Configuration files
- Application logs
- System metadata
EOF

# 7. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞..."
cd "${TEMP_DIR}"
tar -czf "${BACKUP_PATH}.tar.gz" .

# 8. –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
echo "üîê –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã..."
cd "${BACKUP_DIR}"
sha256sum "${BACKUP_NAME}.tar.gz" > "${BACKUP_NAME}.sha256"

# 9. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7)
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
ls -t aibox_backup_*.tar.gz 2>/dev/null | tail -n +8 | xargs -r rm -f
ls -t aibox_backup_*.sha256 2>/dev/null | tail -n +8 | xargs -r rm -f

# 10. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
BACKUP_SIZE=$(du -h "${BACKUP_NAME}.tar.gz" | cut -f1)
echo ""
echo "‚úÖ –ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!"
echo "üìÅ –§–∞–π–ª: ${BACKUP_PATH}.tar.gz"
echo "üìä –†–∞–∑–º–µ—Ä: ${BACKUP_SIZE}"
echo "üîê –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞: ${BACKUP_NAME}.sha256"
echo ""
echo "üìã –°–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤:"
ls -lh aibox_backup_*.tar.gz 2>/dev/null || echo "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤"
echo ""
echo "üîÑ –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   ./scripts/restore.sh ${BACKUP_NAME}.tar.gz"