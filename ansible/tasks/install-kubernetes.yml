---
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã

- name: "üîß –û—Ç–∫–ª—é—á–µ–Ω–∏–µ swap"
  shell: swapoff -a

- name: "üîß –û—Ç–∫–ª—é—á–µ–Ω–∏–µ swap –≤ fstab"
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: "üåê –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π —è–¥—Ä–∞"
  copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/k8s.conf

- name: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sysctl –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
  copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
    dest: /etc/sysctl.d/k8s.conf

- name: "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ sysctl –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
  shell: sysctl --system

- name: "üîë –î–æ–±–∞–≤–ª–µ–Ω–∏–µ GPG –∫–ª—é—á–∞ Kubernetes"
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: "üì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Kubernetes"
  apt_repository:
    repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤"
  apt:
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
  apt:
    name:
      - kubelet={{ k8s_version }}-00
      - kubeadm={{ k8s_version }}-00
      - kubectl={{ k8s_version }}-00
    state: present
    allow_downgrade: yes
  when: ansible_facts['os_family'] == "Debian"

- name: "üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π Kubernetes –ø–∞–∫–µ—Ç–æ–≤"
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl
  when: ansible_facts['os_family'] == "Debian"

- name: "üöÄ –ó–∞–ø—É—Å–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ kubelet"
  systemd:
    name: kubelet
    state: started
    enabled: yes

- name: "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π"
  shell: "{{ item }} --version"
  loop:
    - kubeadm
    - kubelet
    - kubectl
  register: k8s_versions

- name: "üìä –í—ã–≤–æ–¥ –≤–µ—Ä—Å–∏–π Kubernetes"
  debug:
    msg: "{{ item.stdout }}"
  loop: "{{ k8s_versions.results }}"