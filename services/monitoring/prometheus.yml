# Prometheus configuration for AI Box monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'ai-box'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'
rule_files:
  # - "alerts.yml"

# Scrape configuration
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s
    metrics_path: /metrics

  # Gateway service metrics (with authentication)
  - job_name: 'ai-box-gateway'
    static_configs:
      - targets: ['gateway:5000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    headers:
      Authorization: 'Bearer your-api-token-here'

  # Gateway health check (separate job without auth requirement)
  - job_name: 'ai-box-gateway-health'
    static_configs:
      - targets: ['gateway:5000']
    scrape_interval: 30s
    metrics_path: /health
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'up'
        target_label: service
        replacement: 'gateway'

  # RAG service health check
  - job_name: 'ai-box-rag-health'
    static_configs:
      - targets: ['rag:8001']
    scrape_interval: 30s
    metrics_path: /health
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'up'
        target_label: service
        replacement: 'rag'

  # Agents service health check
  - job_name: 'ai-box-agents-health'
    static_configs:
      - targets: ['agents:8002']
    scrape_interval: 30s
    metrics_path: /health
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'up'
        target_label: service
        replacement: 'agents'

  # Ollama health check (using correct endpoint)
  - job_name: 'ai-box-ollama-health'
    static_configs:
      - targets: ['ollama:11434']
    scrape_interval: 60s
    metrics_path: /api/tags
    scrape_timeout: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'up'
        target_label: service
        replacement: 'ollama'

  # Qdrant metrics
  - job_name: 'ai-box-qdrant'
    static_configs:
      - targets: ['qdrant:6333']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Node exporter (system metrics)
  # - job_name: 'node-exporter'
  #   static_configs:
  #     - targets: ['node-exporter:9100']
  #   scrape_interval: 15s
  #   scrape_timeout: 10s

  # Docker container metrics (cAdvisor)
  # - job_name: 'cadvisor'
  #   static_configs:
  #     - targets: ['cadvisor:8080']
  #   scrape_interval: 15s
  #   scrape_timeout: 10s

  # NGINX metrics (if nginx-prometheus-exporter is used)
  # - job_name: 'ai-box-nginx'
  #   static_configs:
  #     - targets: ['nginx-exporter:9113']
  #   scrape_interval: 15s
  #   scrape_timeout: 10s

  # Redis metrics (if Redis is used for caching)
  # - job_name: 'ai-box-redis'
  #   static_configs:
  #     - targets: ['redis-exporter:9121']
  #   scrape_interval: 30s
  #   scrape_timeout: 10s

  # Blackbox exporter for endpoint monitoring
  # - job_name: 'blackbox'
  #   metrics_path: /probe
  #   params:
  #     module: [http_2xx]
  #   static_configs:
  #     - targets:
  #       - http://gateway:5000/health
  #       - http://rag:8001/health
  #       - http://agents:8002/health
  #       - http://ollama:11434/api/tags
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: blackbox-exporter:9115

# Remote write configuration (for external monitoring systems)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Note: Storage, web, and log configurations are now handled via command line flags in Dockerfile
