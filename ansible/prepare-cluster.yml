---
# AI Box - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Kubernetes –∫–ª–∞—Å—Ç–µ—Ä–∞
# –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞

- name: "AI Box - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞"
  hosts: k8s_cluster
  become: yes
  vars_files:
    - vars/main.yml
  
  pre_tasks:
    - name: "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"
      assert:
        that:
          - ansible_facts['memtotal_mb'] >= 2048
          - ansible_facts['processor_vcpus'] >= 2
        fail_msg: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –∫–ª–∞—Å—Ç–µ—Ä–∞"

  tasks:
    - name: "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
      apt:
        upgrade: dist
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
      package:
        name:
          - curl
          - wget
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
        state: present

    - name: "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker"
      include_tasks: tasks/install-docker.yml

    - name: "‚ò∏Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes"
      include_tasks: tasks/install-kubernetes.yml

- name: "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è master —É–∑–ª–∞"
  hosts: masters
  become: yes
  tasks:
    - name: "üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Kubernetes –∫–ª–∞—Å—Ç–µ—Ä–∞"
      shell: |
        kubeadm init --pod-network-cidr={{ k8s_pod_network_cidr }} \
                     --service-cidr={{ k8s_service_cidr }} \
                     --apiserver-advertise-address={{ k8s_node_ip }}
      register: kubeadm_init
      failed_when: false

    - name: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ kubectl –¥–ª—è root"
      shell: |
        mkdir -p /root/.kube
        cp -i /etc/kubernetes/admin.conf /root/.kube/config
        chown root:root /root/.kube/config

    - name: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ kubectl –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
      shell: |
        mkdir -p /home/{{ ansible_user }}/.kube
        cp -i /etc/kubernetes/admin.conf /home/{{ ansible_user }}/.kube/config
        chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config

    - name: "üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞ Flannel"
      shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
      become_user: "{{ ansible_user }}"

    - name: "üîë –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è worker —É–∑–ª–æ–≤"
      shell: kubeadm token create --print-join-command
      register: kubeadm_join_command

    - name: "üìù –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
      set_fact:
        join_command: "{{ kubeadm_join_command.stdout }}"

- name: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ worker —É–∑–ª–æ–≤"
  hosts: workers
  become: yes
  tasks:
    - name: "üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–ª–∞—Å—Ç–µ—Ä—É"
      shell: "{{ hostvars[groups['masters'][0]]['join_command'] }}"
      when: hostvars[groups['masters'][0]]['join_command'] is defined

- name: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Helm"
  hosts: masters
  become: yes
  tasks:
    - name: "üì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Helm"
      get_url:
        url: "https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz"
        dest: "/tmp/helm.tar.gz"

    - name: "üìÇ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ Helm"
      unarchive:
        src: "/tmp/helm.tar.gz"
        dest: "/tmp"
        remote_src: yes

    - name: "‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Helm"
      copy:
        src: "/tmp/linux-amd64/helm"
        dest: "/usr/local/bin/helm"
        mode: '0755'
        remote_src: yes

    - name: "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞"
      shell: kubectl get nodes
      become_user: "{{ ansible_user }}"
      register: cluster_status

    - name: "üìä –í—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞"
      debug:
        msg: "{{ cluster_status.stdout_lines }}"