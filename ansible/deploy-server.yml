---
# AI Box - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
# –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ single server

- name: "AI Box - –°–µ—Ä–≤–µ—Ä–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
  hosts: aibox_servers
  become: yes
  vars_files:
    - vars/main.yml
  
  pre_tasks:
    - name: "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"
      assert:
        that:
          - ansible_facts['memtotal_mb'] >= 2048
          - ansible_facts['processor_vcpus'] >= 2
        fail_msg: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è AI Box (–Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2GB RAM, 2 CPU)"

    - name: "üìä –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ"
      debug:
        msg: 
          - "–°–µ—Ä–≤–µ—Ä: {{ inventory_hostname }}"
          - "–û–°: {{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_version'] }}"
          - "RAM: {{ (ansible_facts['memtotal_mb'] / 1024) | round(1) }}GB"
          - "CPU: {{ ansible_facts['processor_vcpus'] }} cores"

  tasks:
    - name: "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
      apt:
        upgrade: dist
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
      package:
        name:
          - curl
          - wget
          - git
          - unzip
          - htop
          - net-tools
          - ca-certificates
          - gnupg
          - lsb-release
        state: present

    - name: "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker"
      include_tasks: tasks/install-docker.yml

    - name: "üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π AI Box"
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop:
        - /opt/aibox
        - /opt/aibox/config
        - /opt/aibox/data
        - /opt/aibox/logs
        - /opt/aibox/backups

    - name: "üì• –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('0644') }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop:
        - { src: ../docker-compose.yml, dest: /opt/aibox/docker-compose.yml }
        - { src: ../docker-compose.prod.yml, dest: /opt/aibox/docker-compose.prod.yml }
        - { src: ../config/, dest: /opt/aibox/config/ }
        - { src: ../scripts/, dest: /opt/aibox/scripts/, mode: '0755' }
        - { src: ../demo_gateway.py, dest: /opt/aibox/demo_gateway.py }

    - name: "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞"
      template:
        src: templates/env.j2
        dest: /opt/aibox/.env
        mode: '0600'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: "üöÄ –ó–∞–ø—É—Å–∫ AI Box —Å–µ—Ä–≤–∏—Å–æ–≤"
      shell: |
        cd /opt/aibox
        docker-compose -f docker-compose.prod.yml down || true
        docker-compose -f docker-compose.prod.yml up -d
      become_user: "{{ ansible_user }}"

    - name: "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤"
      wait_for:
        port: "{{ item }}"
        host: "localhost"
        delay: 10
        timeout: 120
      loop:
        - 5000  # Gateway
        - 5432  # PostgreSQL
        - 6333  # Qdrant
        - 11434 # Ollama

    - name: "ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Ollama –º–æ–¥–µ–ª–µ–π"
      shell: |
        docker exec aibox-ollama ollama pull llama3.2:3b
        docker exec aibox-ollama ollama pull codellama:7b
      become_user: "{{ ansible_user }}"
      ignore_errors: yes

    - name: "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall"
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - 22    # SSH
        - 80    # HTTP
        - 443   # HTTPS
        - 5000  # AI Box Gateway
        - 3000  # Grafana
        - 9090  # Prometheus
      when: ansible_facts['os_family'] == "Debian"

    - name: "üî• –í–∫–ª—é—á–µ–Ω–∏–µ firewall"
      ufw:
        state: enabled
        policy: deny
        direction: incoming
      when: ansible_facts['os_family'] == "Debian"

    - name: "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞"
      template:
        src: templates/aibox.service.j2
        dest: /etc/systemd/system/aibox.service
        mode: '0644'
      notify: reload systemd

    - name: "üöÄ –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ AI Box"
      systemd:
        name: aibox
        enabled: yes
        state: started
        daemon_reload: yes

    - name: "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤"
      shell: |
        cd /opt/aibox
        docker-compose -f docker-compose.prod.yml ps
      become_user: "{{ ansible_user }}"
      register: services_status

    - name: "üìä –í—ã–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤"
      debug:
        msg: "{{ services_status.stdout_lines }}"

    - name: "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API"
      uri:
        url: "http://localhost:5000/health"
        method: GET
        timeout: 10
      register: health_check
      retries: 3
      delay: 5

    - name: "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏"
      debug:
        msg:
          - "‚úÖ AI Box —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!"
          - "üåê –î–æ—Å—Ç—É–ø: http://{{ inventory_hostname }}:5000"
          - "üìñ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://{{ inventory_hostname }}:5000/docs" 
          - "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://{{ inventory_hostname }}:3000"
          - "üîç –õ–æ–≥–∏: docker-compose -f /opt/aibox/docker-compose.prod.yml logs -f"
          - "üíæ –ë—ç–∫–∞–ø: /opt/aibox/scripts/backup.sh"

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes